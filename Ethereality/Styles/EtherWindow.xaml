<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
                    xmlns:c="clr-namespace:Ethereality.Converters"
                    xmlns:e="clr-namespace:Ethereality">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../Themes/Default.xaml" />
        <ResourceDictionary Source="Icons.xaml" />
        <ResourceDictionary Source="Buttons.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <Style TargetType="{x:Type e:EtherWindow}">
        <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
        <Setter Property="BorderBrush" Value="Black" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="MinHeight" Value="200" />
        <Setter Property="MinWidth" Value="250" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type e:EtherWindow}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid>
                                <Grid.Effect>
                                    <BlurEffect Radius="0" />
                                </Grid.Effect>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="auto" />
                                </Grid.ColumnDefinitions>

                                <Border x:Name="PART_TitleBar"
                                        Padding="20,5">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="auto" />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <TextBlock x:Name="PART_Title"
                                                   Grid.Column="0"
                                                   Padding="0,0,20,0"
                                                   HorizontalAlignment="Left"
                                                   VerticalAlignment="Center"
                                                   FontSize="18"
                                                   FontWeight="ExtraBold"
                                                   Foreground="{StaticResource PrimaryTextBrush}"
                                                   Text="{Binding RelativeSource={RelativeSource AncestorType=Window},
                                                                  Path=Title}" />
                                        <ContentPresenter Grid.Column="1"
                                                          Content="{TemplateBinding TitleBarContent}" />
                                    </Grid>
                                </Border>

                                <Grid Grid.Row="1"
                                      Grid.ColumnSpan="2">
                                    <ContentPresenter x:Name="PART_Content"
                                                      Grid.Row="1"
                                                      Grid.ColumnSpan="2"
                                                      Content="{TemplateBinding Content}" />
                                </Grid>

                                <Grid.Style>
                                    <Style TargetType="Grid">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=(e:Dialog.HasOpenDialog)}"
                                                         Value="True">
                                                <DataTrigger.EnterActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.Effect).(BlurEffect.Radius)"
                                                                             To="20" />
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </DataTrigger.EnterActions>
                                                <DataTrigger.ExitActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.Effect).(BlurEffect.Radius)"
                                                                             To="0" />
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </DataTrigger.ExitActions>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Grid.Style>
                            </Grid>

                            <ItemsControl ItemsSource="{Binding Source={x:Static e:Dialog.Dialogs}}"
                                          Visibility="{Binding Path=(e:Dialog.HasOpenDialog),
                                                               Converter={c:VisibilityConverter}}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <Grid />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate DataType="{x:Type e:Dialog}">
                                        <Grid Background="Transparent">
                                            <Grid.Effect>
                                                <BlurEffect Radius="0" />
                                            </Grid.Effect>
                                            <Grid Background="Transparent">
                                                <b:Interaction.Triggers>
                                                    <b:EventTrigger EventName="MouseDown">
                                                        <b:InvokeCommandAction Command="{Binding Source={x:Static e:Dialog.CancelCommand}}" />
                                                    </b:EventTrigger>
                                                </b:Interaction.Triggers>
                                            </Grid>
                                            <ContentPresenter Content="{Binding Path=Content}" />
                                            <Grid.Style>
                                                <Style TargetType="Grid">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Path=(e:Dialog.HasOpenDialog)}"
                                                                     Value="True">
                                                            <DataTrigger.EnterActions>
                                                                <BeginStoryboard>
                                                                    <Storyboard>
                                                                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                                                         From="0"
                                                                                         To="1" />
                                                                    </Storyboard>
                                                                </BeginStoryboard>
                                                            </DataTrigger.EnterActions>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent},
                                                                                       Path=DataContext.IsCurrent}"
                                                                     Value="False">
                                                            <DataTrigger.EnterActions>
                                                                <BeginStoryboard>
                                                                    <Storyboard>
                                                                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.Effect).(BlurEffect.Radius)"
                                                                                         To="20" />
                                                                    </Storyboard>
                                                                </BeginStoryboard>
                                                            </DataTrigger.EnterActions>
                                                            <DataTrigger.ExitActions>
                                                                <BeginStoryboard>
                                                                    <Storyboard>
                                                                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.Effect).(BlurEffect.Radius)"
                                                                                         To="0" />
                                                                    </Storyboard>
                                                                </BeginStoryboard>
                                                            </DataTrigger.ExitActions>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Grid.Style>
                                        </Grid>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>

                            <StackPanel x:Name="PART_SystemButtons"
                                        Grid.Column="1"
                                        FlowDirection="RightToLeft"
                                        Orientation="Horizontal"
                                        WindowChrome.IsHitTestVisibleInChrome="True">
                                <Button x:Name="PART_BtnClose"
                                        Width="50"
                                        Height="35"
                                        Padding="5"
                                        VerticalAlignment="Top"
                                        Content="{e:Icon Code=CloseIcon}"
                                        Style="{StaticResource Button.Flat.Delicate.Alert}" />

                                <Button x:Name="PART_BtnRestore"
                                        Width="50"
                                        Height="35"
                                        Padding="5"
                                        VerticalAlignment="Top">
                                    <Button.Style>
                                        <Style BasedOn="{StaticResource Button.Flat.Delicate}"
                                               TargetType="Button">
                                            <Setter Property="Content" Value="{e:Icon Code=WindowMaximizeIcon}" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window},
                                                                               Path=WindowState}"
                                                             Value="Maximized">
                                                    <Setter Property="Content" Value="{e:Icon Code=WindowRestoreIcon}" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>

                                <Button x:Name="PART_BtnMinimize"
                                        Width="50"
                                        Height="35"
                                        Padding="10,10,10,2"
                                        VerticalAlignment="Top"
                                        Content="{e:Icon Code=WindowMinimizeIcon}"
                                        Style="{StaticResource Button.Flat.Delicate}" />
                            </StackPanel>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="WindowStyle" Value="None" />
        <Style.Triggers>
            <EventTrigger RoutedEvent="Loaded">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                         From="0"
                                         To="1"
                                         Duration="0:0:0.25" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <Trigger Property="IsActive" Value="False">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <e:BrushAnimation Storyboard.TargetProperty="Background"
                                              To="{StaticResource InactiveTitleBarBrush}"
                                              Duration="0:0:1" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <e:BrushAnimation Storyboard.TargetProperty="Background"
                                              From="{StaticResource InactiveTitleBarBrush}"
                                              Duration="0:0:1" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DialogWindow"
           TargetType="{x:Type e:EtherWindow}"
           BasedOn="{StaticResource {x:Type e:EtherWindow}}">
        <Setter Property="Background" Value="{StaticResource TransparentBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="Black" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HasBlur" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type e:EtherWindow}">
                    <Border x:Name="PART_TitleBar"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter Content="{TemplateBinding Content}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="WindowChrome.CaptionHeight" Value="{Binding RelativeSource={RelativeSource self}, Path=ActualHeight}" />
        <Setter Property="WindowStyle" Value="None" />
    </Style>

    <Style x:Key="PopupWindow"
           TargetType="{x:Type e:EtherWindow}"
           BasedOn="{StaticResource {x:Type e:EtherWindow}}">
        <Setter Property="AllowsTransparency" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="ShowInTaskbar" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type e:EtherWindow}">
                    <Border x:Name="PART_TitleBar">
                        <ContentPresenter Content="{TemplateBinding Content}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="WindowChrome.CaptionHeight" Value="{Binding RelativeSource={RelativeSource self}, Path=ActualHeight}" />
        <Setter Property="WindowStyle" Value="None" />
    </Style>
</ResourceDictionary>