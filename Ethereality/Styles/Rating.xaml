<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
                    xmlns:e="clr-namespace:Ethereality">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../Themes/Default.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="{x:Type e:Rating}">
        <Setter Property="Height" Value="32" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type e:Rating}">
                    <ItemsControl Height="{TemplateBinding Height}"
                                  Margin="{TemplateBinding Margin}"
                                  HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                  VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                  ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent},
                                                        Path=Buttons}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Horizontal" />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                    </ItemsControl>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type e:RatingButton}">
        <Setter Property="Command" Value="{x:Static e:Rating.SelectRatingCommand}" />
        <Setter Property="CommandParameter" Value="{Binding RelativeSource={RelativeSource self}, Path=Value}" />
        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType=e:Rating}, Path=Foreground}" />
        <Setter Property="Height" Value="{Binding RelativeSource={RelativeSource AncestorType=e:Rating}, Path=ActualHeight}" />
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TransformGroup>
                    <RotateTransform Angle="0" />
                    <ScaleTransform ScaleX="1" ScaleY="1" />
                </TransformGroup>
            </Setter.Value>
        </Setter>
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type e:RatingButton}">
                    <Border Padding="{Binding RelativeSource={RelativeSource AncestorType=e:Rating},
                                              Path=Padding}"
                            Background="#0000">
                        <e:Icon Code="{Binding RelativeSource={RelativeSource AncestorType=e:Rating},
                                               Path=UnSelectedIconCode}"
                                Foreground="{TemplateBinding Foreground}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Width" Value="{Binding RelativeSource={RelativeSource AncestorType=e:Rating}, Path=ActualHeight}" />
        <Style.Triggers>
            <Trigger Property="PreviewIsInValueRange" Value="True">
                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType=e:Rating}, Path=SelectedColor}" />
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.(TransformGroup.Children)[1].(ScaleTransform.ScaleX)">

                                <LinearDoubleKeyFrame KeyTime="0:0:0.25"
                                                      Value="2" />
                                <LinearDoubleKeyFrame KeyTime="0:0:0.5"
                                                      Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.(TransformGroup.Children)[1].(ScaleTransform.ScaleY)">

                                <LinearDoubleKeyFrame KeyTime="0:0:0.25"
                                                      Value="2" />
                                <LinearDoubleKeyFrame KeyTime="0:0:0.5"
                                                      Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInValueRange" Value="True" />
                    <Condition Property="PreviewIsInValueRange" Value="{x:Null}" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType=e:Rating}, Path=SelectedColor}" />
            </MultiTrigger>
            <Trigger Property="IsInValueRange" Value="True">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type e:RatingButton}">
                            <Border Padding="{Binding RelativeSource={RelativeSource AncestorType=e:Rating},
                                                      Path=Padding}"
                                    Background="#0000">
                                <e:Icon Code="{Binding RelativeSource={RelativeSource AncestorType=e:Rating},
                                                       Path=SelectedIconCode}"
                                        Foreground="{TemplateBinding Foreground}" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(TransformGroup.Children)[0].(RotateTransform.Angle)"
                                             From="0"
                                             To="360"
                                             Duration="0:0:0.5" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(TransformGroup.Children)[0].(RotateTransform.Angle)"
                                             From="360"
                                             To="0"
                                             Duration="0:0:0.5" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>